#!/usr/bin/env python

from datetime import datetime

DAY_IN_SECONDS = 24 * 3600
HOUR_IN_SECONDS = 3600
MINUTE_IN_SECONDS = 60
MONTH_IN_SECONDS = 30 * 24 * 3600
YEAR_IN_SECONDS = 365 * 24 * 3600

def get_total_seconds(start_date):
    current_date = datetime.now()
    delta = current_date - start_date

    return int(delta.total_seconds())

def get_years_and_remaining_seconds(total_seconds):
    years = total_seconds // YEAR_IN_SECONDS
    remaining_seconds = total_seconds % YEAR_IN_SECONDS

    return years, remaining_seconds

def get_months_and_remaining_seconds(total_seconds):
    months = total_seconds // MONTH_IN_SECONDS
    remaining_seconds = total_seconds % MONTH_IN_SECONDS

    return months, remaining_seconds

def get_days_and_remaining_seconds(total_seconds):
    days = total_seconds // DAY_IN_SECONDS
    remaining_seconds = total_seconds % DAY_IN_SECONDS

    return days, remaining_seconds

def get_hours_and_remaining_seconds(total_seconds):
    hours = total_seconds // HOUR_IN_SECONDS
    remaining_seconds = total_seconds % HOUR_IN_SECONDS

    return hours, remaining_seconds

def get_minutes(total_seconds):
    minutes = total_seconds // MINUTE_IN_SECONDS

    return minutes

def get_time_formatted(payload):
    time_formatted = "ï“ž "

    if payload.get("years") > 0:
        time_formatted += f"{payload.get('years')} years "

    if payload.get("months") > 0:
        time_formatted += f"{payload.get('months')} months "

    if payload.get("days") > 0:
        time_formatted += f"{payload.get('days')} days "
    else:
        time_formatted += f"{payload.get('hours')} hours {payload.get('minutes')} mins "

    return time_formatted

def main():
    start_date = datetime.strptime("2025-01-11", "%Y-%m-%d")

    total_seconds = get_total_seconds(start_date)

    if total_seconds < 0:
        print("00 hours 00 mins ")

        return

    years, remaining_seconds = get_years_and_remaining_seconds(total_seconds)
    months, remaining_seconds = get_months_and_remaining_seconds(remaining_seconds)
    days, remaining_seconds = get_days_and_remaining_seconds(remaining_seconds)
    hours, remaining_seconds = get_hours_and_remaining_seconds(remaining_seconds)
    minutes = get_minutes(remaining_seconds)

    time_formatted = get_time_formatted({
        "days": days,
        "hours": hours,
        "minutes": minutes,
        "months": months,
        "years": years,
    })

    print(time_formatted)

if __name__ == "__main__":
    main()

# vim: set ft=python:
